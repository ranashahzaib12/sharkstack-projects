# -*- coding: utf-8 -*-
"""sentimentAnalyzer.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AARZP4e2FjVqRkq-78HIfraKyuPfl6Up
"""

# !pip install groq python-docx reportlab pdfplumber --quiet

import os
import pdfplumber
import textwrap
from groq import Groq
from google.colab import files
from docx import Document
from reportlab.platypus import SimpleDocTemplate, Paragraph
from reportlab.lib.styles import getSampleStyleSheet
from IPython.display import display
import ipywidgets as widgets

GROQ_API_KEY = "gsk_etYE0IDkdm5VKCu8mTZqWGdyb3FYM1kg8"  # Replace with your key
client = Groq(api_key=GROQ_API_KEY)

def generate_blog(topic):
    prompt = f"Analyze the sentiment of the following text and return only one word: Positive, Negative, or Neutral.\n\nText: {input_text}"

    chat_completion = client.chat.completions.create(
        messages=[
            {"role": "system", "content": "You are a helpful sentiment analyzer."},
            {"role": "user", "content": prompt}
        ],
        model="llama3-8b-8192",
    )
    return chat_completion.choices[0].message.content

input_text = widgets.Textarea(
    placeholder='Enter a tweet or your current mood',
    description='Sentiment:',
    layout=widgets.Layout(width='600px', height='80px')
)

generate_button = widgets.Button(description="Fetch Sentiment", button_style='success')

# Display widgets
display(input_text, generate_button)

def handle_generate(b):
    topic = input_text.value.strip()

    if not topic:
        print("Please enter content .")
        return

    print(" Analyzing text...")
    result = generate_blog(topic)

    print("\n\n--- Reviewing sentiment ---\n\n")
    print(result)


# Bind the button click
generate_button.on_click(handle_generate)

